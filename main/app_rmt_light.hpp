#pragma once

#include "esp_http_client.h"
#include "esp_log.h"

#include "app_remote.hpp"

#include <memory>
#include <vector>

namespace app {

namespace remote {

#if 1
static const uint32_t signal_light_on[] = {
    57444027, 14778580, 14713043, 43221203, 43221204, 14713043, 43221204,
    14778579, 14713043, 14778579, 43286738, 14713043, 14713044, 43286739,
    14713043, 43286739, 14713043, 43221203, 14713044, 14778579, 43221203,
    14713043, 14778580, 14778578, 14713043, 43221203, 14713044, 43221203,
    14713044, 43286739, 43221203, 14778580, 14778578, 14778578, 14713043,
    43221203, 43221204, 43221204, 43221204, 14713043, 14778579, 32979,
};
static const uint32_t signal_light_off[] = {
    57444027, 13205739, 14778579, 43221203, 43286739, 14713043, 43221203,
    14778580, 14778578, 14713043, 43221203, 14778580, 14713042, 43221204,
    14713044, 43155667, 14713045, 43221203, 14713044, 14713043, 43286739,
    14713043, 14713043, 14713044, 14778579, 43155667, 43286740, 43221203,
    14713044, 43221203, 43221204, 14713044, 14778579, 14778578, 43221203,
    43155668, 43221204, 43221204, 43221204, 14647508, 14713044, 32979,
};
#else
static const uint32_t signal_light_on[] = {
    54298297, 12681448, 40534247, 12746984, 40599782, 12746983, 40599782,
    12812519, 40599782, 12746983, 40599782, 12746983, 40599782, 40665319,
    12681447, 40599783, 12746983, 40599782, 40599783, 40534248, 40665319,
    12812518, 12681446, 40665319, 40599782, 12681448, 40665318, 40599783,
    12746983, 40599782, 12746983, 12746982, 12681447, 40599783, 12746983,
    12812518, 12746982, 12746982, 12746982, 12746982, 12746983, 40599782,
    12746983, 40599782, 12812519, 40599782, 40599783, 12746983, 40599782,
    40599783, 12812519, 12812517, 12812517, 12746982, 40665318, 12812518,
    12812517, 40599782, 12746983, 12812518, 12812517, 12746982, 40665318,
    40665318, 12812518, 32997,
};
static const uint32_t signal_light_off[] = {
    56002207, 14450893, 42369228, 14516428, 42303692, 14450893, 42303692,
    14450893, 42369228, 14450893, 42303692, 14450893, 42369228, 42369228,
    14516428, 42303692, 14450893, 42303692, 42369229, 42369228, 42303692,
    14450893, 14450893, 42303692, 42303693, 14450893, 42369228, 42303693,
    14450893, 42303692, 14450893, 14516428, 14450892, 42303692, 14450893,
    12943588, 14450892, 14450892, 14450892, 14516428, 14450892, 12878052,
    42303692, 12878054, 12878052, 12878052, 12878052, 12878053, 12878052,
    40665317, 12812518, 12812517, 12812518, 12812517, 40730853, 12812518,
    12812517, 40599782, 12812518, 12812518, 12812517, 12746982, 40665318,
    12746982, 40665318, 32998,
};
#endif

class signal {
public:
  enum FUNCTION {
    LIGHT_ON,
    LIGHT_OFF,
  };
  static rmt_raw_data_t get(FUNCTION f) {
    switch (f) {
    case LIGHT_ON:
      return {(rmt_item32_t *)signal_light_on,
              (rmt_item32_t *)(&signal_light_on + 1)};
    case LIGHT_OFF:
      return {(rmt_item32_t *)signal_light_off,
              (rmt_item32_t *)(&signal_light_off + 1)};
    }
    return {};
  }
};

class post {
public:
  static constexpr char const *TAG = "post";

  static esp_err_t post_ir_signal(int id) {
    esp_err_t err;
    const char base_url_signals_send[] = "http://192.168.11.4/signals/send?id=";
    char url[sizeof(base_url_signals_send) + 8];
    sprintf(url, "%s%d", base_url_signals_send, id);
    static esp_http_client_config_t config;
    config.method = HTTP_METHOD_GET;
    config.url = url;
    esp_http_client_handle_t client = esp_http_client_init(&config);
    if (!client)
      return ESP_FAIL;
    err = esp_http_client_perform(client);
    esp_http_client_cleanup(client);
    return err;
  }
};

} // namespace remote
} // namespace app
